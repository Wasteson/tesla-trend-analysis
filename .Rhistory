axis.text = element_text(color = "white"),
legend.background = element_rect(fill = "#1e1e1e"),
legend.key = element_rect(fill = "#1e1e1e")
)
# 🎨 Mørk visualisering
ggplot(volume_combined, aes(x = week, y = n, color = segment)) +
geom_line(linewidth = 1.2) +
annotate("rect",
xmin = holiday_start, xmax = holiday_end,
ymin = -Inf, ymax = Inf,
fill = "gray30", alpha = 0.3) +
# 🎄 Vertikal tekst i julefeltet
annotate("text",
x = holiday_start + (holiday_end - holiday_start) / 2,
y = max(volume_combined$n),
label = "Christmas holiday\n(low activity)",
color = "gray80", size = 3.5, angle = 90, hjust = -0.2) +
geom_vline(data = events, aes(xintercept = date),
linetype = "dashed", color = "white") +
geom_text(data = events, aes(x = date, y = Inf, label = label),
angle = 90, vjust = -0.5, hjust = 1.1,
size = 3.5, color = "white", inherit.aes = FALSE) +
scale_color_manual(values = c(
"Electric vehicles" = "#FFDD57",
"Fossil vehicles" = "#FF6B6B",
"Total market" = "#00c0c7"
)) +
labs(
title = "Weekly retail volume – Market overview",
subtitle = "Actual listings per week, from July 2024",
x = "Week", y = "Number of listings", color = "Segment"
) +
theme_minimal(base_size = 13) +
theme(
plot.background = element_rect(fill = "#1e1e1e"),
panel.background = element_rect(fill = "#1e1e1e"),
panel.grid.major = element_line(color = "#444444"),
text = element_text(color = "white"),
axis.text = element_text(color = "white"),
legend.background = element_rect(fill = "#1e1e1e"),
legend.key = element_rect(fill = "#1e1e1e")
)
# 🎨 Mørk visualisering
ggplot(volume_combined, aes(x = week, y = n, color = segment)) +
geom_line(linewidth = 1.2) +
annotate("rect",
xmin = holiday_start, xmax = holiday_end,
ymin = -Inf, ymax = Inf,
fill = "gray30", alpha = 0.3) +
# 🎄 Vertikal tekst i julefeltet
annotate("text",
x = holiday_start + (holiday_end - holiday_start) / 2,
y = max(volume_combined$n),
label = "Christmas holiday\n(low activity)",
color = "gray80", size = 3.5, angle = 90, hjust = -0.1) +
geom_vline(data = events, aes(xintercept = date),
linetype = "dashed", color = "white") +
geom_text(data = events, aes(x = date, y = Inf, label = label),
angle = 90, vjust = -0.5, hjust = 1.1,
size = 3.5, color = "white", inherit.aes = FALSE) +
scale_color_manual(values = c(
"Electric vehicles" = "#FFDD57",
"Fossil vehicles" = "#FF6B6B",
"Total market" = "#00c0c7"
)) +
labs(
title = "Weekly retail volume – Market overview",
subtitle = "Actual listings per week, from July 2024",
x = "Week", y = "Number of listings", color = "Segment"
) +
theme_minimal(base_size = 13) +
theme(
plot.background = element_rect(fill = "#1e1e1e"),
panel.background = element_rect(fill = "#1e1e1e"),
panel.grid.major = element_line(color = "#444444"),
text = element_text(color = "white"),
axis.text = element_text(color = "white"),
legend.background = element_rect(fill = "#1e1e1e"),
legend.key = element_rect(fill = "#1e1e1e")
)
# 🎨 Mørk visualisering
ggplot(volume_combined, aes(x = week, y = n, color = segment)) +
geom_line(linewidth = 1.2) +
annotate("rect",
xmin = holiday_start, xmax = holiday_end,
ymin = -Inf, ymax = Inf,
fill = "gray30", alpha = 0.3) +
# 🎄 Vertikal tekst i julefeltet
annotate("text",
x = holiday_start + (holiday_end - holiday_start) / 2,
y = max(volume_combined$n) * 0.6,
label = "Christmas holiday\n(low activity)",
color = "gray80", size = 3.5, angle = 90, hjust = -0.1) +
geom_vline(data = events, aes(xintercept = date),
linetype = "dashed", color = "white") +
geom_text(data = events, aes(x = date, y = Inf, label = label),
angle = 90, vjust = -0.5, hjust = 1.1,
size = 3.5, color = "white", inherit.aes = FALSE) +
scale_color_manual(values = c(
"Electric vehicles" = "#FFDD57",
"Fossil vehicles" = "#FF6B6B",
"Total market" = "#00c0c7"
)) +
labs(
title = "Weekly retail volume – Market overview",
subtitle = "Actual listings per week, from July 2024",
x = "Week", y = "Number of listings", color = "Segment"
) +
theme_minimal(base_size = 13) +
theme(
plot.background = element_rect(fill = "#1e1e1e"),
panel.background = element_rect(fill = "#1e1e1e"),
panel.grid.major = element_line(color = "#444444"),
text = element_text(color = "white"),
axis.text = element_text(color = "white"),
legend.background = element_rect(fill = "#1e1e1e"),
legend.key = element_rect(fill = "#1e1e1e")
)
# 🎨 Mørk visualisering
ggplot(volume_combined, aes(x = week, y = n, color = segment)) +
geom_line(linewidth = 1.2) +
annotate("rect",
xmin = holiday_start, xmax = holiday_end,
ymin = -Inf, ymax = Inf,
fill = "gray30", alpha = 0.3) +
# 🎄 Vertikal tekst i julefeltet
annotate("text",
x = holiday_start + (holiday_end - holiday_start) / 2,
y = max(volume_combined$n) * 0.7,
label = "Christmas holiday\n(low activity)",
color = "gray80", size = 3.5, angle = 90, hjust = -0.1) +
geom_vline(data = events, aes(xintercept = date),
linetype = "dashed", color = "white") +
geom_text(data = events, aes(x = date, y = Inf, label = label),
angle = 90, vjust = -0.5, hjust = 1.1,
size = 3.5, color = "white", inherit.aes = FALSE) +
scale_color_manual(values = c(
"Electric vehicles" = "#FFDD57",
"Fossil vehicles" = "#FF6B6B",
"Total market" = "#00c0c7"
)) +
labs(
title = "Weekly retail volume – Market overview",
subtitle = "Actual listings per week, from July 2024",
x = "Week", y = "Number of listings", color = "Segment"
) +
theme_minimal(base_size = 13) +
theme(
plot.background = element_rect(fill = "#1e1e1e"),
panel.background = element_rect(fill = "#1e1e1e"),
panel.grid.major = element_line(color = "#444444"),
text = element_text(color = "white"),
axis.text = element_text(color = "white"),
legend.background = element_rect(fill = "#1e1e1e"),
legend.key = element_rect(fill = "#1e1e1e")
)
# 🎨 Mørk visualisering
ggplot(volume_combined, aes(x = week, y = n, color = segment)) +
geom_line(linewidth = 1.2) +
annotate("rect",
xmin = holiday_start, xmax = holiday_end,
ymin = -Inf, ymax = Inf,
fill = "gray30", alpha = 0.3) +
# 🎄 Vertikal tekst i julefeltet
annotate("text",
x = holiday_start + (holiday_end - holiday_start) / 2,
y = max(volume_combined$n) * 0.8,
label = "Christmas holiday\n(low activity)",
color = "gray80", size = 3.5, angle = 90, hjust = -0.1) +
geom_vline(data = events, aes(xintercept = date),
linetype = "dashed", color = "white") +
geom_text(data = events, aes(x = date, y = Inf, label = label),
angle = 90, vjust = -0.5, hjust = 1.1,
size = 3.5, color = "white", inherit.aes = FALSE) +
scale_color_manual(values = c(
"Electric vehicles" = "#FFDD57",
"Fossil vehicles" = "#FF6B6B",
"Total market" = "#00c0c7"
)) +
labs(
title = "Weekly retail volume – Market overview",
subtitle = "Actual listings per week, from July 2024",
x = "Week", y = "Number of listings", color = "Segment"
) +
theme_minimal(base_size = 13) +
theme(
plot.background = element_rect(fill = "#1e1e1e"),
panel.background = element_rect(fill = "#1e1e1e"),
panel.grid.major = element_line(color = "#444444"),
text = element_text(color = "white"),
axis.text = element_text(color = "white"),
legend.background = element_rect(fill = "#1e1e1e"),
legend.key = element_rect(fill = "#1e1e1e")
)
ggsave(
filename = "Weekly retail volume – Market overview.png",
plot = last_plot(),
width = 10,
height = 6,
dpi = 300,
bg = "#1e1e1e"
)
# 📈 Ukentlig volum per segment
volume_brands <- market_data %>%
filter(segment %in% c("Tesla", "VW ID", "Skoda Enyaq")) %>%
count(week, segment)
# 🎨 Plot i mørk stil
ggplot(volume_brands, aes(x = week, y = n, color = segment)) +
geom_line(linewidth = 1.2) +
labs(
title = "Weekly retail volume – Tesla vs VW ID vs Skoda Enyaq",
subtitle = "Actual listings per week · Retail only · From July 2024",
x = "Week",
y = "Number of listings",
color = "Brand"
) +
scale_color_manual(values = c(
"Tesla" = "#6BE7C2",
"VW ID" = "#8BC34A",
"Skoda Enyaq" = "#F9A825"
)) +
theme_minimal(base_size = 13) +
theme(
plot.background = element_rect(fill = "#1e1e1e", color = NA),
panel.background = element_rect(fill = "#1e1e1e", color = NA),
panel.grid.major = element_line(color = "#444444"),
panel.grid.minor = element_blank(),
text = element_text(color = "white"),
axis.text = element_text(color = "white"),
legend.background = element_rect(fill = "#1e1e1e"),
legend.key = element_rect(fill = "#1e1e1e")
)
# Graf 2: "Weekly retail volume – Tesla vs VW ID vs Skoda Enyaq"
# 📈 Ukentlig volum for valgte elbilsegmenter
volume_ev_segments <- market_data %>%
filter(segment %in% c("Tesla", "VW ID", "Skoda Enyaq")) %>%
count(week, segment) %>%
mutate(week = as.POSIXct(week))
# 🎨 Visualisering (mørkt tema + julefelt + events)
ggplot(volume_ev_segments, aes(x = week, y = n, color = segment)) +
geom_line(linewidth = 1.2) +
# 🕯️ Grå felt for juleperioden
annotate("rect",
xmin = holiday_start, xmax = holiday_end,
ymin = -Inf, ymax = Inf,
fill = "gray30", alpha = 0.3) +
annotate("text",
x = holiday_start + (holiday_end - holiday_start) / 2,
y = max(volume_ev_segments$n) * 0.8,
label = "Christmas holiday\n(low activity)",
color = "gray80", size = 3.5,
angle = 90, hjust = 0) +
# 🏛️ Politiske hendelser
geom_vline(data = events, aes(xintercept = date),
linetype = "dashed", color = "white") +
geom_text(data = events, aes(x = date, y = Inf, label = label),
angle = 90, vjust = -0.5, hjust = 1.1,
size = 3.5, color = "white", inherit.aes = FALSE) +
# 🎨 Tilpasset fargepalett
scale_color_manual(values = c(
"Tesla" = "#E82127",
"VW ID" = "#1A93D9",
"Skoda Enyaq" = "#F9A825"
)) +
# 📝 Titler og layout
labs(
title = "Weekly retail volume – Tesla vs VW ID vs Skoda Enyaq",
subtitle = "Actual listings per week · Retail only · From July 2024",
x = "Week", y = "Number of listings", color = "Brand"
) +
theme_minimal(base_size = 13) +
theme(
plot.background = element_rect(fill = "#1e1e1e"),
panel.background = element_rect(fill = "#1e1e1e"),
panel.grid.major = element_line(color = "#444444"),
text = element_text(color = "white"),
axis.text = element_text(color = "white"),
legend.background = element_rect(fill = "#1e1e1e"),
legend.key = element_rect(fill = "#1e1e1e")
)
ggsave(
filename = "Weekly retail volume – Tesla vs VW ID vs Skoda Enyaq.png",
plot = last_plot(),
width = 10,
height = 6,
dpi = 300,
bg = "#1e1e1e"
)
# Funksjon for å beregne bruddpunkter
# 🔍 Beregn bruddpunkter for ett segment
get_breakpoints <- function(data, group_name) {
df <- data %>%
filter(segment == group_name) %>%
group_by(week) %>%
summarise(n = n(), .groups = "drop") %>%
arrange(week) %>%
mutate(week_num = as.integer(difftime(week, min(week), units = "weeks")))
# Lineær modell og segmentert modell med 2 brudd
lm_base <- lm(n ~ week_num, data = df)
seg_model <- segmented(lm_base, seg.Z = ~week_num, npsi = 2)
# Ekstraher bruddpunktene
breakpoints <- round(seg_model$psi[, "Est."])
tibble(segment = group_name, breakpoint = breakpoints)
}
segments_to_check <- c("Tesla", "VW ID", "Skoda Enyaq", "Electric vehicles")
breakpoint_data <- map_dfr(segments_to_check, ~get_breakpoints(market_data, .x))
ggplot(breakpoint_data, aes(x = breakpoint, y = segment, color = segment)) +
geom_point(size = 4) +
scale_x_continuous(
name = "Estimated breakpoint (week number from July 1, 2024)",
breaks = seq(20, 40, 2)
) +
scale_color_manual(values = c(
"Tesla" = "#E82127",
"VW ID" = "#1A93D9",
"Skoda Enyaq" = "#F9A825",
"Electric vehicles" = "#FFDD57"
)) +
labs(
title = "Timing of structural shifts in listing volume",
subtitle = "Segmented regression – Two breakpoints per segment"
) +
theme_minimal(base_size = 13) +
theme(
panel.grid.minor = element_blank(),
plot.background = element_rect(fill = "#1e1e1e"),
panel.background = element_rect(fill = "#1e1e1e"),
panel.grid.major = element_line(color = "#444444"),
text = element_text(color = "white"),
axis.text = element_text(color = "white"),
legend.position = "none"
)
# Kjør for valgte segmenter
segments_to_check <- c("Tesla", "VW ID", "Skoda Enyaq", "Electric vehicles")
breakpoint_data <- map_dfr(segments_to_check, ~get_breakpoints(market_data, .x)) %>%
arrange(segment, breakpoint)  # Viktig for linjene
# Visualiser bruddpunktene
ggplot(breakpoint_data, aes(x = breakpoint, y = segment, color = segment, group = segment)) +
geom_line(linewidth = 1.2) +         # 🔗 Koble punktene
geom_point(size = 4) +               # 🔘 Vis punktene
scale_x_continuous(
name = "Estimated breakpoint (week number from July 1, 2024)",
limits = c(18, 40),
breaks = seq(18, 40, 2)
) +
scale_color_manual(values = c(
"Tesla" = "#E82127",
"VW ID" = "#1A93D9",
"Skoda Enyaq" = "#F9A825",
"Electric vehicles" = "#FFDD57"
)) +
labs(
title = "Timing of structural shifts in listing volume",
subtitle = "Segmented regression – Two breakpoints per segment",
y = NULL
) +
theme_minimal(base_size = 13) +
theme(
plot.background = element_rect(fill = "#1e1e1e"),
panel.background = element_rect(fill = "#1e1e1e"),
panel.grid.major = element_line(color = "#444444"),
axis.text = element_text(color = "white"),
text = element_text(color = "white"),
legend.position = "none"
)
ggplot(breakpoint_data, aes(x = breakpoint, y = segment, color = segment, group = segment)) +
geom_line(linewidth = 1.2) +        # 🔗 Koble punktene
geom_point(size = 4) +              # 🔘 Vis punktene
scale_x_continuous(
name = "Estimated breakpoint (week number from July 1, 2024)",
limits = c(1, 40),                # 🔁 Starter fra uke 1
breaks = seq(1, 40, 2)
) +
scale_color_manual(values = c(
"Tesla" = "#E82127",
"VW ID" = "#1A93D9",
"Skoda Enyaq" = "#F9A825",
"Electric vehicles" = "#FFDD57"
)) +
labs(
title = "Timing of structural shifts in listing volume",
subtitle = "Segmented regression – Two breakpoints per segment",
y = NULL
) +
theme_minimal(base_size = 13) +
theme(
plot.background = element_rect(fill = "#1e1e1e"),
panel.background = element_rect(fill = "#1e1e1e"),
panel.grid.major = element_line(color = "#444444"),
axis.text = element_text(color = "white"),
text = element_text(color = "white"),
legend.position = "none"
)
ggsave(
filename = "Timing of structural shifts in listing volume.png",
plot = last_plot(),
width = 10,
height = 6,
dpi = 300,
bg = "#1e1e1e"
)
model_tesla <- segmented(lm_tesla, seg.Z = ~uke, npsi = 2)
# 🔍 Oppdatert funksjon: returnerer prediksjoner også
get_segmented_model <- function(data, group_name) {
df <- data %>%
filter(segment == group_name) %>%
group_by(week) %>%
summarise(n = n(), .groups = "drop") %>%
arrange(week) %>%
mutate(
week_num = as.integer(difftime(week, min(week), units = "weeks")),
week_date = as.Date(week)  # Lagre for plotting
)
# Modellering
lm_base <- lm(n ~ week_num, data = df)
seg_model <- segmented(lm_base, seg.Z = ~week_num, npsi = 2)
# Prediksjoner
df$pred <- predict(seg_model)
# Returnér med segmentnavn
df$segment <- group_name
df
}
# Liste over segmenter vi ønsker å modellere
segments_to_check <- c("Tesla", "VW ID", "Skoda Enyaq", "Electric vehicles")
# Samle alle prediksjoner
predicted_data <- map_dfr(segments_to_check, ~get_segmented_model(market_data, .x))
ggplot(predicted_data, aes(x = week_date, y = pred, color = segment)) +
geom_line(linewidth = 1.2) +
scale_color_manual(values = c(
"Tesla" = "#E82127",
"VW ID" = "#1A93D9",
"Skoda Enyaq" = "#F9A825",
"Electric vehicles" = "#FFDD57"
)) +
labs(
title = "Segmented regression: Fitted trends in weekly listing volume",
subtitle = "Two breakpoints per segment – fitted using segmented regression",
x = "Week", y = "Fitted number of listings"
) +
theme_minimal(base_size = 13) +
theme(
plot.background = element_rect(fill = "#1e1e1e"),
panel.background = element_rect(fill = "#1e1e1e"),
panel.grid.major = element_line(color = "#444444"),
axis.text = element_text(color = "white"),
text = element_text(color = "white")
)
extract_segment_model_stats <- function(data, group_name) {
df <- data %>%
filter(segment == group_name) %>%
group_by(week) %>%
summarise(n = n(), .groups = "drop") %>%
arrange(week) %>%
mutate(week_num = as.integer(difftime(week, min(week), units = "weeks")))
lm_base <- lm(n ~ week_num, data = df)
seg_model <- segmented(lm_base, seg.Z = ~week_num, npsi = 2)
breakpoints <- round(seg_model$psi[, "Est."])
r_squared <- summary(seg_model)$r.squared
rse <- summary(seg_model)$sigma
tibble(
Segment = group_name,
Breakpoints = paste(breakpoints, collapse = ", "),
`R²` = round(r_squared, 2),
`Residual Std. Error` = round(rse, 2)
)
}
# Kjør for alle segmenter og lag tabellen
segments_to_check <- c("Tesla", "VW ID", "Skoda Enyaq", "Electric vehicles")
breakpoint_summary <- map_dfr(segments_to_check, ~extract_segment_model_stats(market_data, .x))
# Vis som tabell
breakpoint_summary
library(tibble)
library(gridExtra)
library(grid)
# 💾 Lagre som PNG
png("Segmented_regression_summary_table.png", width = 800, height = 300, res = 150)
grid.draw(bg)
#  R-kode for å lagre breakpoint_summary som PNG-tabell
# 🎨 Tilpass mørkt tema
ttheme_dark <- ttheme_default(
core = list(fg_params = list(col = "white")),
colhead = list(fg_params = list(col = "white", fontface = "bold")),
padding = unit(c(6, 4), "mm")
)
# 📐 Lag grafisk tabellobjekt
table_plot <- tableGrob(breakpoint_summary, rows = NULL, theme = ttheme_dark)
# 🖼️ Mørk bakgrunn
bg <- rectGrob(gp = gpar(fill = "#1e1e1e", col = NA))
# 💾 Lagre som PNG
png("Segmented_regression_summary_table.png", width = 800, height = 300, res = 150)
grid.draw(bg)
grid.draw(table_plot)
dev.off()
ttheme_dark <- ttheme_minimal(
core = list(
fg_params = list(col = "white", fontsize = 11),
bg_params = list(fill = "#2b2b2b", col = "#444444")
),
colhead = list(
fg_params = list(col = "white", fontface = "bold", fontsize = 12),
bg_params = list(fill = "#3b3b3b", col = "#555555")
)
)
# 📐 Lag grafisk tabellobjekt
table_plot <- tableGrob(breakpoint_summary, rows = NULL, theme = ttheme_dark)
# 🖼️ Mørk bakgrunn bak hele figuren
bg <- rectGrob(gp = gpar(fill = "#1e1e1e", col = NA))
# 💾 Lagre som PNG
png("Segmented_regression_summary_table.png", width = 800, height = 300, res = 150)
grid.draw(bg)
grid.draw(table_plot)
dev.off()
